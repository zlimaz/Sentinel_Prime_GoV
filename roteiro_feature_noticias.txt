## Roteiro do Projeto ##

---

### Feature 1: Bot de Notícias (Status: Concluído)

**Objetivo:** Expandir as capacidades do bot para que ele também publique notícias sobre a política nacional.

**Passo a Passo da Implementação:**

**1. Infraestrutura de Automação (GitHub Actions):** - CONCLUÍDO
   - Criado o arquivo de workflow: `.github/workflows/noticias-bot.yml`.
   - Configurado para rodar a cada 2 horas e manualmente.

**2. Desenvolvimento dos Módulos de Coleta (Python):** - CONCLUÍDO
   - Criada a pasta `src/coletores/`.
   - Criados os coletores `coleta_senado.py` e `coleta_camara.py`.

**3. Lógica de Análise e Formatação (Python):** - CONCLUÍDO
   - Criadas as pastas `src/analisador/` e `src/formatadores/`.
   - Criado o `analisador_noticias.py` para evitar duplicatas.
   - Criado o `formatador_noticias.py` para montar as threads.

**4. Orquestração e Publicação (Python):** - CONCLUÍDO
   - Criado o script principal `src/main_noticias.py` para orquestrar todo o fluxo.

**5. Dependências:** - CONCLUÍDO
   - Adicionadas as bibliotecas `feedparser` e `python-dateutil` ao `requirements.txt`.

**6. Correção e Validação dos Coletores:** - CONCLUÍDO
   - Atualizada a URL do feed de notícias do Senado.
   - Corrigido o parsing do feed do Senado para lidar com a ausência do campo 'summary'.
   - Realizados testes locais para garantir o funcionamento de ambos os coletores.

---

### Feature 1.1: Expansão das Fontes de Notícias (Status: Concluído)

**Objetivo:** Aumentar a variedade e a agilidade das notícias, incluindo fontes dos poderes Judiciário e Executivo.

**Passo a Passo da Implementação:**

**1. Definição da Estratégia:** - CONCLUÍDO
   - Decidido manter a lógica atual de postar a notícia mais recente de uma lista unificada de todas as fontes.

**2. Desenvolvimento dos Novos Coletores:** - CONCLUÍDO
   - Criado o coletor `coleta_stf.py` para o Supremo Tribunal Federal.
   - Criado o coletor `coleta_tse.py` para o Tribunal Superior Eleitoral.
   - Criado o coletor `coleta_agenciabrasil.py` para a Agência Brasil.

**3. Integração dos Coletores:** - CONCLUÍDO
   - O script `src/main_noticias.py` foi atualizado para importar e utilizar os três novos coletores.

**4. Testes e Validação:** - CONCLUÍDO
   - **Problemas Encontrados e Soluções:**
     - **Erro de SSL:** O erro `SSLError: CERTIFICATE_VERIFY_FAILED` impedia a conexão com alguns feeds. A solução inicial foi adicionar `verify=False` às requisições.
     - **URLs de Feeds Inválidas:** Os coletores do TSE e do STF pararam de funcionar devido a URLs incorretas. Após pesquisa, as URLs corretas foram encontradas e implementadas.
     - **Erro de Importação (`ModuleNotFoundError`):** A reestruturação do projeto na pasta `src` causou problemas de importação. A solução foi mover o script `main_noticias.py` para o diretório raiz e ajustar os caminhos dos imports para `from src...`.
   - **Validação Final:** Todos os 5 coletores (`camara`, `senado`, `stf`, `tse`, `agenciabrasil`) foram testados individualmente e funcionaram. O script principal `main_noticias.py` foi executado com sucesso, integrando todas as fontes.

**Próximos Passos Imediatos:**
1.  **Refatoração Pós-Implementação:** - CONCLUÍDO
    - Aplicadas melhorias de código sugeridas pela ferramenta `pylint`. A pontuação atual do `pylint` é de 9.47/10.
    - Os avisos restantes (`too-many-arguments`, `too-many-positional-arguments`, `too-many-local-variables`, `unused-argument`, `unused-variable`, `unused-import`) foram analisados e considerados aceitáveis ou falsos positivos para o contexto atual do projeto.
2.  **Testes Finais:**
    - Executar o script `main_noticias.py` para confirmar que todas as funcionalidades estão operando corretamente após a refatoração.

---

### Feature 2: Acompanhamento de Projetos de Lei (Status: A Fazer)

**Objetivo:** Divulgar o andamento de projetos de lei (PLs) importantes.

**Fonte de Dados:**
- APIs dos portais de Dados Abertos da Câmara dos Deputados e do Senado Federal.

**Ideia do Roteiro:**
1.  **Pesquisa e Desenvolvimento dos Coletores:**
    - Estudar as APIs de proposições da Câmara e do Senado.
    - Criar coletores para buscar PLs que tiveram atualizações recentes (ex: mudança de status, aprovação em comissão).
2.  **Lógica de Análise e Seleção:**
    - Definir critérios para o que é uma "atualização importante" a ser noticiada.
    - Evitar duplicatas, salvando o estado das proposições já noticiadas.
3.  **Desenvolvimento do Formatador:**
    - Criar um formato de thread claro para anunciar as atualizações dos projetos de lei.
4.  **Infraestrutura e Orquestração:**
    - Criar um novo workflow no GitHub Actions (ou adicionar ao existente) para rodar o bot de PLs (ex: uma vez por dia).
    - Criar um script principal para orquestrar o fluxo da nova feature.
